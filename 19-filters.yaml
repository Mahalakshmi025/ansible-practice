- name: demo on functions/filters
  hosts: local
  connection: local
  tasks:
  #to handle undefined variables
  - name: print the default variable
    ansible.builtin.debug:
      msg: "Hello {{ course | default ('Ansible') }}"
  # Manipulate the strings
  - name: convert to uppercase
    vars:
      greeting: "Hello Ramesh"
    ansible.builtin.debug:
      msg: "{{ greeting | upper }}"

  - name: convert to lowercase
    vars:
      greeting: "WELCOME"
    ansible.builtin.debug:
      msg: "{{ greeting | lower }}"

  #To get unique values
  - name: get the unique values
    vars:
      numbers: [1,2,3,45,34,34,6,3,24,567,24,1]
    ansible.builtin.debug:
      msg: "{{ numbers | unique }}"

  #To get minimum and maximum
  - name: get the min & maximum
    vars:
      numbers: [0,38, 5679, 0.3, 78, 2, 34, -1]
    ansible.builtin.debug:
      msg: "Min: {{ numbers | min }}, Max: {{ numbers | max }}"

  #Dictoniary (or) map to list
  - name: convert Map to list
    vars:
      course:
        name: "DevOps with AWS"
        duration: 120
        trainer: "siva"
    ansible.builtin.debug:
      msg: "{{ course | dict2items }}"

  #convert list to map
  - name: convert list to map
    vars:
      course:
      - { "key": "name", "value": "DevOps with AWS" } 
      - { "key": "duration", "value": 120 }
      - { "key": "trainer", "value": "siva" }
    ansible.builtin.debug:
      msg: "{{ course | items2dict }}"

  #To test string is valid IP address (or) not
  - name: chec ip address
    vars: 
      myip: "366.168.1.1"
    ansible.builtin.debug:
      msg: "{{ myip | ansible.utils.ipv4 }}"

  